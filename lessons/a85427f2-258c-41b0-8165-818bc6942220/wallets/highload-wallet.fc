{-
Перегруженные кошельки для больших пачек переводов (к примеру, для обменников)
могут отправить до 254 (так как лежат в словаре) внутренних сообщений в каждом external_message
-}

() recv_internal(slice in_msg) impure {
    ;; do nothing for internal messages
}

() recv_external(slice in_msg) impure {
    ;; изначально все как обычно
    var signature = in_msg~load_bits(512);
    var cs = in_msg;
    var (subwallet_id, valid_until, msg_seqno) = (cs~load_uint(32), cs~load_uint(32), cs~load_uint(32));
    throw_if(35, valid_until <= now());
    var ds = get_data().begin_parse();
    var (stored_seqno, stored_subwallet, public_key) = (ds~load_uint(32), ds~load_uint(32), ds~load_uint(256));
    ds.end_parse();
    throw_unless(33, msg_seqno == stored_seqno);
    throw_unless(34, subwallet_id == stored_subwallet);
    throw_unless(35, check_signature(slice_hash(in_msg), signature, public_key));
    var dict = cs~load_dict(); ;; получаем список транзакций на отправку
    cs.end_parse();
    accept_message();
    int i = -1; ;; индекс текущего сообщения
    do {
        (i, var cs, var f) = dict.idict_get_next?(16, i); ;; идем по всем
        if (f) { ;; и отправляем, если нашли
            var mode = cs~load_uint(8); ;;
            send_raw_message(cs~load_ref(), mode);
        }
    } until (~ f);
    set_data(begin_cell()
            .store_uint(stored_seqno + 1, 32)
            .store_uint(stored_subwallet, 32)
            .store_uint(public_key, 256)
            .end_cell());
}

;; Get methods

int seqno() method_id {
    return get_data().begin_parse().preload_uint(32);
}

int get_public_key() method_id {
    var cs = get_data().begin_parse();
    cs~load_uint(64);
    return cs.preload_uint(256);
}
